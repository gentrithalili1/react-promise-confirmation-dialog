{"mappings":"mMAKA,SAASA,EAASC,GAChBA,EAAMC,UAAUC,SAAW,CACzBC,QAAS,CACPC,QAAS,6CACTC,YAAY,GAEdC,OAAQ,CACNF,QAAS,iDACTG,QAAQ,GAGVC,QAAS,gCAETC,OAAQ,CACNL,QAAS,4BACTM,OAAQ,CACNC,SAAU,kCAGdA,SAAU,kDACVC,QAAS,CAEP,6HACA,CACER,QAAS,wQACTC,YAAY,IAGhBQ,SAAU,uBACVC,YAAa,WAEjB,CAlCAC,EAAAC,QAAiBjB,EACjBA,EAASkB,YAAc,WACvBlB,EAASmB,QAAU,E","sources":["node_modules/refractor/lang/makefile.js"],"sourcesContent":["'use strict'\n\nmodule.exports = makefile\nmakefile.displayName = 'makefile'\nmakefile.aliases = []\nfunction makefile(Prism) {\n  Prism.languages.makefile = {\n    comment: {\n      pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    // Built-in target names\n    builtin: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    // Targets\n    symbol: {\n      pattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n      inside: {\n        variable: /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n      }\n    },\n    variable: /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n    keyword: [\n      // Directives\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n      {\n        pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n        lookbehind: true\n      }\n    ],\n    operator: /(?:::|[?:+!])?=|[|@]/,\n    punctuation: /[:;(){}]/\n  }\n}\n"],"names":["$fc1842a01fa9d9bf$var$makefile","Prism","languages","makefile","comment","pattern","lookbehind","string","greedy","builtin","symbol","inside","variable","keyword","operator","punctuation","module","exports","displayName","aliases"],"version":3,"file":"makefile.fd3e08e0.js.map"}