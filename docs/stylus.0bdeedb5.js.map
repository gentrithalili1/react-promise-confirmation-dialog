{"mappings":"mMAKA,SAASA,EAAOC,IACZ,SAASA,GACT,IAAIC,EAAS,CACXC,IAAK,uBACLC,OAAQ,CACNC,QAAS,gDACTC,QAAQ,GAEVC,cAAe,KAEfC,KAAM,KAENC,UAAW,+BACXC,QAAS,CACPL,QAAS,4DACTM,YAAY,GAEdC,QAAS,iBACTC,OAAQ,oBACRC,QAAS,qBACTC,SAAU,CAGR,oGAEFC,YAAa,iBAEfd,EAAO,cAAmB,CACxBG,QAAS,iBACTY,MAAO,WACPf,OAAQ,CACNgB,UAAW,CACTb,QAAS,QACTY,MAAO,eAETE,KAAMjB,IAGVA,EAAO,KAAU,CACfG,QAAS,oBACTH,OAAQ,CACNkB,SAAU,SACVD,KAAMjB,IAGVD,EAAMoB,UAAUC,OAAS,CACvBC,QAAS,CACPlB,QAAS,qCACTM,YAAY,GAEd,qBAAsB,CACpBN,QAAS,aACTM,YAAY,EACZT,OAAQ,CACNsB,OAAQ,WACRL,KAAMjB,IAGV,uBAAwB,CACtBG,QAAS,sDACTM,YAAY,EACZT,OAAQ,CACNuB,SAAU,OACVN,KAAMjB,IAGVwB,UAAW,CACTrB,QAAS,kDACTM,YAAY,EACZT,OAAQ,CACNQ,QAAS,OACTS,KAAMjB,IAKV,uBAAwB,CACtBG,QAAS,0HACTM,YAAY,EACZT,OAAQ,CACNyB,SAAU,CACRtB,QAAS,WACTH,OAAQ,CACNK,cAAeL,EAAOK,gBAG1BY,KAAMjB,IAMV0B,SAAU,CACRvB,QAAS,uNACTM,YAAY,EACZT,OAAQ,CACNK,cAAeL,EAAOK,cACtBS,YAAa,UAGjBR,KAAMN,EAAOM,KACbJ,OAAQF,EAAOE,OACfG,cAAeL,EAAOK,cACtBS,YAAa,gBAEjB,CAxGE,CAwGCf,EACL,CA7GA4B,EAAAC,QAAiB9B,EACjBA,EAAO+B,YAAc,SACrB/B,EAAOgC,QAAU,E","sources":["node_modules/refractor/lang/stylus.js"],"sourcesContent":["'use strict'\n\nmodule.exports = stylus\nstylus.displayName = 'stylus'\nstylus.aliases = []\nfunction stylus(Prism) {\n  ;(function(Prism) {\n    var inside = {\n      url: /url\\(([\"']?).*?\\1\\)/i,\n      string: {\n        pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n        greedy: true\n      },\n      interpolation: null,\n      // See below\n      func: null,\n      // See below\n      important: /\\B!(?:important|optional)\\b/i,\n      keyword: {\n        pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n        lookbehind: true\n      },\n      hexcode: /#[\\da-f]{3,6}/i,\n      number: /\\b\\d+(?:\\.\\d+)?%?/,\n      boolean: /\\b(?:true|false)\\b/,\n      operator: [\n        // We want non-word chars around \"-\" because it is\n        // accepted in property names.\n        /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\n      ],\n      punctuation: /[{}()\\[\\];:,]/\n    }\n    inside['interpolation'] = {\n      pattern: /\\{[^\\r\\n}:]+\\}/,\n      alias: 'variable',\n      inside: {\n        delimiter: {\n          pattern: /^{|}$/,\n          alias: 'punctuation'\n        },\n        rest: inside\n      }\n    }\n    inside['func'] = {\n      pattern: /[\\w-]+\\([^)]*\\).*/,\n      inside: {\n        function: /^[^(]+/,\n        rest: inside\n      }\n    }\n    Prism.languages.stylus = {\n      comment: {\n        pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      },\n      'atrule-declaration': {\n        pattern: /(^\\s*)@.+/m,\n        lookbehind: true,\n        inside: {\n          atrule: /^@[\\w-]+/,\n          rest: inside\n        }\n      },\n      'variable-declaration': {\n        pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n        lookbehind: true,\n        inside: {\n          variable: /^\\S+/,\n          rest: inside\n        }\n      },\n      statement: {\n        pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n        lookbehind: true,\n        inside: {\n          keyword: /^\\S+/,\n          rest: inside\n        }\n      },\n      // A property/value pair cannot end with a comma or a brace\n      // It cannot have indented content unless it ended with a semicolon\n      'property-declaration': {\n        pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n        lookbehind: true,\n        inside: {\n          property: {\n            pattern: /^[^\\s:]+/,\n            inside: {\n              interpolation: inside.interpolation\n            }\n          },\n          rest: inside\n        }\n      },\n      // A selector can contain parentheses only as part of a pseudo-element\n      // It can span multiple lines.\n      // It must end with a comma or an accolade or have indented content.\n      selector: {\n        pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n        lookbehind: true,\n        inside: {\n          interpolation: inside.interpolation,\n          punctuation: /[{},]/\n        }\n      },\n      func: inside.func,\n      string: inside.string,\n      interpolation: inside.interpolation,\n      punctuation: /[{}()\\[\\];:.]/\n    }\n  })(Prism)\n}\n"],"names":["$ab80e70a8154e4ef$var$stylus","Prism","inside","url","string","pattern","greedy","interpolation","func","important","keyword","lookbehind","hexcode","number","boolean","operator","punctuation","alias","delimiter","rest","function","languages","stylus","comment","atrule","variable","statement","property","selector","module","exports","displayName","aliases"],"version":3,"file":"stylus.0bdeedb5.js.map"}